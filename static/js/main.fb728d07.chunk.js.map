{"version":3,"sources":["components/AppHeader.tsx","components/AppMessages.tsx","components/AppNavigation.tsx","components/App.tsx","reportWebVitals.js","index.tsx"],"names":["AppHeader","AppMessage","message","title","content","AppMessages","props","undefined","messages","map","key","AppNavigation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAgBeA,MAbf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,mBACA,cAAC,IAAD,8BACA,cAAC,IAAD,oBACA,cAAC,IAAD,oC,QCPR,SAASC,EAAT,GAAqE,IAA/CC,EAA8C,EAA9CA,QACpB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,UAAaA,EAAQC,QACrB,cAAC,IAAD,UAAmBD,EAAQE,aAalBC,MARf,SAAqBC,GACnB,YAA0BC,IAAnBD,EAAME,SACTF,EAAME,SAASC,KAAI,SAACP,EAAcQ,GAAf,OACnB,cAACT,EAAD,CAAsBC,QAASA,GAAdQ,MAEjB,8B,QCTSC,MANf,WACE,OACE,cAAC,IAAD,yBCkBWC,MAdf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,YCJKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fb728d07.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\r\nimport { Menu, MenuItem, MenuList } from '@chakra-ui/menu'\r\n\r\nfunction AppHeader(): ReactElement<any, any> {\r\n  return (\r\n    <Menu>\r\n      <MenuList>\r\n        <MenuItem>Home</MenuItem>\r\n        <MenuItem>Change Location</MenuItem>\r\n        <MenuItem>Trade</MenuItem>\r\n        <MenuItem>Report Infected</MenuItem>\r\n      </MenuList>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport { Alert, AlertDescription, AlertIcon, AlertTitle } from '@chakra-ui/alert';\r\n\r\nfunction AppMessage({ message }: any): React.ReactElement<any, any> {\r\n  return (\r\n    <Alert>\r\n      <AlertIcon />\r\n      <AlertTitle>{message.title}</AlertTitle>\r\n      <AlertDescription>{message.content}</AlertDescription>\r\n    </Alert>\r\n  );\r\n}\r\n\r\nfunction AppMessages(props: any): React.ReactElement<any, any> {\r\n  return props.messages !== undefined\r\n    ? props.messages.map((message: any, key: number): any => (\r\n      <AppMessage key={key} message={message} />\r\n    ))\r\n    : <></>;\r\n}\r\n\r\nexport default AppMessages;\r\n","import React from 'react';\r\nimport { Heading } from '@chakra-ui/react'\r\n\r\nfunction AppNavigation(): React.ReactElement<any, any> {\r\n  return (\r\n    <Heading>It works!</Heading>\r\n  );\r\n}\r\n\r\nexport default AppNavigation;\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { RecoilRoot } from 'recoil';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nimport AppHeader from './AppHeader';\nimport AppMessages from './AppMessages';\nimport AppNavigation from './AppNavigation';\n\nfunction App(): React.ReactElement<any, any> {\n  return (\n    <ChakraProvider>\n      <RecoilRoot>\n        <HashRouter>\n          <AppHeader />\n          <AppMessages />\n          <AppNavigation />\n        </HashRouter>\n      </RecoilRoot>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}